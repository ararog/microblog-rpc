// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/microblog/rpc/v1/microblog.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_proto_microblog_rpc_v1_microblog_proto protoreflect.FileDescriptor

var file_proto_microblog_rpc_v1_microblog_proto_rawDesc = string([]byte{
	0x0a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f,
	0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x72,
	0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x65, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62,
	0x6c, 0x6f, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76,
	0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x63, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xe8,
	0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f,
	0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x56, 0x0a, 0x0b, 0x46, 0x65, 0x65,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x32, 0x66, 0x0a, 0x0f, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x21, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x61, 0x0a, 0x10, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a,
	0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62,
	0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x64, 0x0a, 0x13,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0x7f, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x2a, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x5e, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x72, 0x61, 0x72, 0x6f, 0x67, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x62, 0x6c,
	0x6f, 0x67, 0x2d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x3b, 0x72, 0x70, 0x63, 0xa2, 0x02, 0x03,
	0x48, 0x4c, 0x57, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_proto_microblog_rpc_v1_microblog_proto_goTypes = []any{
	(*GetUsersRequest)(nil),            // 0: microblog.rpc.v1.GetUsersRequest
	(*GetProfileByUserIdRequest)(nil),  // 1: microblog.rpc.v1.GetProfileByUserIdRequest
	(*CreateProfileRequest)(nil),       // 2: microblog.rpc.v1.CreateProfileRequest
	(*PingRequest)(nil),                // 3: microblog.rpc.v1.PingRequest
	(*UnfollowRequest)(nil),            // 4: microblog.rpc.v1.UnfollowRequest
	(*FollowRequest)(nil),              // 5: microblog.rpc.v1.FollowRequest
	(*NotifyRequest)(nil),              // 6: microblog.rpc.v1.NotifyRequest
	(*GetProfilesMediasRequest)(nil),   // 7: microblog.rpc.v1.GetProfilesMediasRequest
	(*SearchRequest)(nil),              // 8: microblog.rpc.v1.SearchRequest
	(*GetUsersResponse)(nil),           // 9: microblog.rpc.v1.GetUsersResponse
	(*GetProfileByUserIdResponse)(nil), // 10: microblog.rpc.v1.GetProfileByUserIdResponse
	(*CreateProfileResponse)(nil),      // 11: microblog.rpc.v1.CreateProfileResponse
	(*PingResponse)(nil),               // 12: microblog.rpc.v1.PingResponse
	(*UnfollowResponse)(nil),           // 13: microblog.rpc.v1.UnfollowResponse
	(*FollowResponse)(nil),             // 14: microblog.rpc.v1.FollowResponse
	(*NotifyResponse)(nil),             // 15: microblog.rpc.v1.NotifyResponse
	(*GetProfilesMediasResponse)(nil),  // 16: microblog.rpc.v1.GetProfilesMediasResponse
	(*SearchResponse)(nil),             // 17: microblog.rpc.v1.SearchResponse
}
var file_proto_microblog_rpc_v1_microblog_proto_depIdxs = []int32{
	0,  // 0: microblog.rpc.v1.UsersService.GetUsers:input_type -> microblog.rpc.v1.GetUsersRequest
	1,  // 1: microblog.rpc.v1.ProfilesService.GetProfileByUserId:input_type -> microblog.rpc.v1.GetProfileByUserIdRequest
	2,  // 2: microblog.rpc.v1.ProfilesService.CreateProfile:input_type -> microblog.rpc.v1.CreateProfileRequest
	3,  // 3: microblog.rpc.v1.FeedService.Ping:input_type -> microblog.rpc.v1.PingRequest
	4,  // 4: microblog.rpc.v1.FollowerService.Unfollow:input_type -> microblog.rpc.v1.UnfollowRequest
	5,  // 5: microblog.rpc.v1.FollowingService.Follow:input_type -> microblog.rpc.v1.FollowRequest
	6,  // 6: microblog.rpc.v1.NotificationService.Notify:input_type -> microblog.rpc.v1.NotifyRequest
	7,  // 7: microblog.rpc.v1.MediasService.GetProfilesMedias:input_type -> microblog.rpc.v1.GetProfilesMediasRequest
	8,  // 8: microblog.rpc.v1.SearchService.Search:input_type -> microblog.rpc.v1.SearchRequest
	9,  // 9: microblog.rpc.v1.UsersService.GetUsers:output_type -> microblog.rpc.v1.GetUsersResponse
	10, // 10: microblog.rpc.v1.ProfilesService.GetProfileByUserId:output_type -> microblog.rpc.v1.GetProfileByUserIdResponse
	11, // 11: microblog.rpc.v1.ProfilesService.CreateProfile:output_type -> microblog.rpc.v1.CreateProfileResponse
	12, // 12: microblog.rpc.v1.FeedService.Ping:output_type -> microblog.rpc.v1.PingResponse
	13, // 13: microblog.rpc.v1.FollowerService.Unfollow:output_type -> microblog.rpc.v1.UnfollowResponse
	14, // 14: microblog.rpc.v1.FollowingService.Follow:output_type -> microblog.rpc.v1.FollowResponse
	15, // 15: microblog.rpc.v1.NotificationService.Notify:output_type -> microblog.rpc.v1.NotifyResponse
	16, // 16: microblog.rpc.v1.MediasService.GetProfilesMedias:output_type -> microblog.rpc.v1.GetProfilesMediasResponse
	17, // 17: microblog.rpc.v1.SearchService.Search:output_type -> microblog.rpc.v1.SearchResponse
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_microblog_rpc_v1_microblog_proto_init() }
func file_proto_microblog_rpc_v1_microblog_proto_init() {
	if File_proto_microblog_rpc_v1_microblog_proto != nil {
		return
	}
	file_proto_microblog_rpc_v1_user_proto_init()
	file_proto_microblog_rpc_v1_profile_proto_init()
	file_proto_microblog_rpc_v1_feed_proto_init()
	file_proto_microblog_rpc_v1_media_proto_init()
	file_proto_microblog_rpc_v1_following_proto_init()
	file_proto_microblog_rpc_v1_follower_proto_init()
	file_proto_microblog_rpc_v1_notification_proto_init()
	file_proto_microblog_rpc_v1_search_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_microblog_rpc_v1_microblog_proto_rawDesc), len(file_proto_microblog_rpc_v1_microblog_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   8,
		},
		GoTypes:           file_proto_microblog_rpc_v1_microblog_proto_goTypes,
		DependencyIndexes: file_proto_microblog_rpc_v1_microblog_proto_depIdxs,
	}.Build()
	File_proto_microblog_rpc_v1_microblog_proto = out.File
	file_proto_microblog_rpc_v1_microblog_proto_goTypes = nil
	file_proto_microblog_rpc_v1_microblog_proto_depIdxs = nil
}
